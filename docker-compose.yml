version: '3.8'

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.filePath=/logs/traefik.log"
      - "--accesslog=true"
      - "--accesslog.bufferingsize=50"
      - "--accesslog.filePath=/logs/access.log"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    #ports:
    #  - "80:80"
    #  - "8000:8080"
    #  - "5432:5432"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - traefiklog:/logs
    networks:
      - gn-network

  database:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geoinspirecatmg
    command: [ "postgres",
               "-c", "log_statement=all",
               "-c", "logging_collector=true",
               "-c", "log_file_mode=0644",
               "-c", "log_directory=/var/log/postgresql",
               "-c", "log_filename=postgresql.log" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:        
            - "traefik.enable=true"
            - "traefik.http.routers.database.rule=HostSNI(`*`)"
            - "traefik.http.routers.database.entrypoints=postgres"
            - "traefik.http.routers.database.tls=false"
            - "traefik.http.services.database.loadbalancer.server.port=5432"
            - "traefik.http.routers.database.service=database"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/log/postgresql
    restart: always
    ports: 
      - ${DP_PORT}:5432
    networks:
      - gn-network

  geonetwork:
    image: geoinspire:3.0.0
    build:
      dockerfile: ./Dockerfile
      args:
        #parametro para establecer logotipo del entorno en la interfaz
        #integracion, pruebas o produccion
        entorno: ${ENTORNO}
    healthcheck:
      test: "curl http://localhost:8080/"
      interval: 5s
      timeout: 5s
      retries: 30
    labels:
            - "traefik.enable=true"
            - "traefik.http.routers.geonetwork.middlewares=root-redirect"
            - "traefik.http.middlewares.root-redirect.replacepathregex.regex=^/$$"
            - "traefik.http.middlewares.root-redirect.replacepathregex.replacement=/geonetwork/"
            - "traefik.http.routers.geonetwork.rule=Host(`geonetwork.localhost`)"
            - "traefik.http.routers.geonetwork.entrypoints=web"
            - "traefik.http.services.geonetwork.loadbalancer.server.port=8080"
            - "traefik.http.services.geonetwork.loadbalancer.sticky=true"
            - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.name=gnstickycookie"
            - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.secure=false"
            - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.httpOnly=true"
    restart: always
        
    volumes:
            - gndata:/catalogue-data
            - tomcatlog:/usr/local/tomcat/logs
    depends_on:
      database:
        condition: service_healthy
    networks:
           - gn-network
    environment:
      WEBAPP_CONTEXT_PATH: /geonetwork
      DATA_DIR: /catalogue-data
      TZ: Europe/Madrid
      JAVA_OPTS: >-
                    --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                    -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
                    -Djavax.net.ssl.trustStore=/opt/java/openjdk/lib/security/cacerts 
                    -Djavax.net.ssl.trustStorePassword=changeit
                    -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
                    -Djetty.httpConfig.requestHeaderSize=32768
                    -Dorg.eclipse.jetty.server.Request.maxFormContentSize=500000
                    -Dorg.eclipse.jetty.server.Request.maxFormKeys=4000
                    -Dgeonetwork.dir=/catalogue-data
                    -Dgeonetwork.formatter.dir=/catalogue-data/data/formatter
                    -Dgeonetwork.schema.dir=/catalogue-data/config/schema_plugins
                    -Dgeonetwork.indexConfig.dir=/catalogue/data/config/index                       
                    -Dgeonetwork.schemapublication.dir=/catalogue-data/data/resources/schemapublication
                    -Dgeonetwork.htmlcache.dir=/catalogue-data/data/resources/htmlcache
                    -Des.host=elasticsearch
                    -Des.protocol=http
                    -Des.port=9200
                    -Des.url=http://elasticsearch:9200
                    -Des.username=elasticsearch
                    -Des.password=elasticsearch
                    -Dkb.url=http://kibana:5601
                    -Dgeonetwork.ESFeaturesProxy.targetUri=http://elasticsearch:9200/gn-features/{_}
                    -Dgeonetwork.HttpDashboardProxy.targetUri=http://kibana:5601
                    -Dgeonetwork.MicroServicesProxy.targetUri=http://ogc-api-records-service:8080
                    -Dlog_dir=/usr/local/tomcat/logs
      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: database
      KB_URL: http://kibana:5601
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: ${DB_NAME}
      GEONETWORK_DB_USERNAME: ${DB_USER}
      GEONETWORK_DB_PASSWORD: ${DB_PASS}
      HARVESTER_SCHEDULER_ENABLED: "true"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 2
      VIRTUAL_HOST: localhost
    ports:
              - ${TOMCAT_PORT}:8080

  ogc-api-records-service:
    image: geonetwork/gn-cloud-ogc-api-records-service:4.2.5-1
    environment:
      SPRING_PROFILES_ACTIVE: standalone
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/geoinspirecatmg
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
      GN_BASEURL: http://geonetwork.localhost/geonetwork/api
      GN_LEGACY_URL: http://geonetwork.localhost/geonetwork
      GN_INDEX_URL: http://elasticsearch:9200
      SERVER_FORWARDHEADERSSTRATEGY: FRAMEWORK
      JAVA_OPTS: -Dfile.encoding=UTF-8
    healthcheck:
      test: "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    depends_on:
      geonetwork:
         condition: service_healthy
    networks:
      - gn-network

  elasticsearch:
    image: elasticsearch:7.17.10
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: "curl -s http://localhost:9200 >/dev/null || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    environment:
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - esconfig:/usr/share/elasticsearch/config
    networks:
      - gn-network

  kibana:
    image: kibana:7.17.10
    environment:
      SERVER_NAME: 'kibana'
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /${GN_DIR}/dashboards
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - kbdata:/usr/share/kibana/data
      - kbconfig:/usr/share/kibana/config
    networks:
      - gn-network

volumes:
  gndata:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  esdata:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  esconfig:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  kbdata:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  kbconfig:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  pgdata:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  pglog:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  traefiklog:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test
  tomcatlog:
    #driver: local
    #driver_opts:
    #  type: none
    #  o: bind
    #  device: /home/user/test

networks:
  gn-network:
    driver: bridge
